1、CSS错误调试
	1、Invalid property value
		属性值写错了
	2、Unknown property name
		属性名称写错了
2、样式表的特征
	1、继承性
		大部分的css属性可以由父元素继承给子元素
	2、层叠性
		允许为一个元素定义多种的使用方式(内联方式,内部样式表,外部样式表)或多个样式规则。如果声明的属性们之间不冲突的话，那么所有的属性们都可以应用在元素上
	3、优先级
		如果样式属性声明冲突的话，会按照不同的优先级来应用样式

		浏览器缺省设置    ：   低
		内部或外部样式表  ：   中
			就近原则：后定义者优先
		内联方式           ：  高
3、CSS选择器(重点)
	1、作用
		规范了页面中哪些元素能够使用声明好的样式
		目的：为了匹配页面的元素
	2、选择器详解
		1、元素选择器
			特点：由标记名称作为选择器，主要匹配页面中指定标记所对应的所有元素
			语法：
				标记{
					样式声明;
				}
			ex:
				div{ ... }
				p{ ... }
				input{ ... }
		2、类选择器
			特点：允许被任意一个元素所引用的选择器
			语法：
				1、声明
					.类名{  若干样式声明 }
					类名：
						1、字母，数字，_,-组成
						2、数字不能开头
				2、引用
					<ANY class="类名">(此处不加.)
			
			练习：
				1、创建一个网页 03-selector-class-exer.html
				2、创建几个元素(div,h3,p,span)
				3、使用类选择器，设置以上所有标记的样式
					1、文字大小：24px
					2、背景颜色：silver
					3、加粗效果：font-weight:bold
			特殊用法：
				1、分类选择器的定义方式
					允许将元素选择器和类选择器结合到一起使用，为了实现对某种元素不同样式的细分控制
					语法：
						元素选择器.类选择器{ ... }
					ex:
						.important{
							类选择器，匹配页面中所有的class为important的元素
						}

						div{
							元素选择器，匹配页面中所有的 div 元素
						}

						div.important{
							分类选择器：匹配页面中所有class为important的 div 元素
						}
				2、多类选择器的引用方式
						允许让一个元素同时引用多个类选择器，多个类选择器之间使用 空格 隔开即可
						
						<ANY class="c1 c2 c3">
						
						练习：
							在 03-selector-class-exer.html 中
							增加一个类选择器
							.dec{
								text-decoration:underline;
							}

							让所有的元素增加对 dec 类选择器的引用
		3、id选择器
			1、ID的作用
				在HTML中，每个元素都允许设置一个id属性，主要用于表示该元素在网页中独一无二的标识
				<div id="main"> </div>
			2、ID选择器
				为了匹配页面中指定ID值的元素
				语法：
					#ID值{ ... } 
					ex:
						#main{  
							/*匹配页面中id为main的元素*/
							color:red;
						}
		4、群组选择器
			1、作用
				定义多个选择器们的共有的样式
				定义方式是一个以 , 隔开的选择器列表
			2、语法
				选择器1,选择器2,选择器3,... ...{
					... ...
				}
				ex:
					#main,p,span,.important{
						color:red;
					}
					等同于
					#main{color:red;}
					p{color:red;}
					span{color:red;}
					.important{color:red;}
		5、后代选择器
			1、作用
				依托于元素的后代关系来匹配元素(不限制层级)
			2、语法
				选择器1 选择器2{ ... }
				ex:
					#laowang div{}
		6、子代选择器
			1、作用
				依托于元素的子代关系来匹配元素(只有一层层级关系)
			2、语法
				选择器1>选择器2{ ... }
				ex:
					#laowang>div{...}
					#laowang>div>div{...}
			3、练习
				<div id="d1">
					<span>d1中的span元素</span>
					<p class="pp">
						<span>d1中的pp中的span</span>
					</p>
				</div>
				1、设置d1中所有的span元素,文本为红色,加粗
					#d1 span{
						color:red;
						font-weight:bold;
					}
				2、设置d1中的pp中的span元素,文字大小为18px
					方案1：
						#d1>.pp>span{font-size:18px;}
					方案2：
						.pp>span{font-size:18px;}
					方案3：
						#d1 .pp span{font-size:18px;}
					方案4：
						#d1>p.pp span{font-size:18px;}
		7、伪类选择器
			1、作用
				匹配元素不同状态的选择器
				ex: 超链接 a 元素，具备四个状态
				状态1：未被访问时的状态
					文本是蓝色，有下划线
				状态2：鼠标悬停在元素上面的时候
					鼠标的状态变成了 "手"
				状态3：当元素被激活时
					文本变成了 红色
				状态4：当访问过后时
					文本颜色变成了 紫色
			2、语法
				:伪类状态
				通常会配合着其他的选择器一起使用
				选择器:伪类状态

				1、链接伪类
					1、:link
						匹配超链接未被访问时的状态
					2、:visited
						匹配超链接被访问过后的状态
				2、动态伪类
					1、:hover
						匹配鼠标悬停在元素上面时的状态
					2、:active
						匹配元素被激活时的状态
					3、:focus
						匹配元素获取焦点时的状态
						(文本框和密码框中使用居多)
	3、选择器的优先级 - 权值
		权值越大，优先级越高

		选择器           权值
		元素选择器       1
		类/伪类选择器    10
		id选择器         100
		内联方式         1000

		复杂的选择器(后代，子代，分类)们的选择器的权值要相加
4、尺寸 与 边框
	1、CSS单位
		1、尺寸单位
			1、px - 像素
			2、% - 占据父元素对应属性的占比
			3、in - 英寸  1in=2.54cm
			4、pt - 磅 1pt = 1/72in
				在css中通常会表示文字大小

				计算机中通常设置PPI(Pixel Per Inch)为72
			5、cm - 厘米
			6、mm - 毫米
			注意：在css中，所有的尺寸的单位是不能省略的
		2、颜色取值
			1、rgb(r,g,b)
				r:红色范围值 0-255
				g:绿色范围值 0-255
				b:蓝色范围值 0-255

				ex:
					background-color:rgb(255,0,0)

					rgb(255,0,0) : 红色
					rgb(0,255,0) : 绿色
					rgb(0,0,0) : 黑色
					rgb(255,255,255) : 白色
					rgb(128,32,56) : ??
			2、rgba(r,g,b,alpha)
				alpha:颜色的透明度，取值为 0-1 之间的数字
				 0 ：完全透明
				 1 ：完全不透明

				background-color:rgba(255,18,64,0.5)
			3、#rrggbb
				由6位16进制数字组成(0-9,A-F)
			4、#rgb
				#rrggbb的缩写，当没两位数字一样时，可以使用缩写
				#123 -> #112233
				#f00 -> #ff0000
			5、英文单词
	2、尺寸属性
		1、作用
			改变元素的宽度和高度
		2、属性
			1、宽度
				属性：width
				取值：以px或%为单位的数值
			2、高度
				属性：height
				取值：以px为单位的数值

			所有的块级元素默认尺寸：
				宽度：占父元素的100%
				高度：以内容为准
			所有的行内元素默认只存：
				宽度：以内容为准
				高度：以内容为准
			注意：
				css中，除img之外的所有行内元素是不允许修改尺寸的
		3、溢出处理
			1、什么是溢出
				当使用尺寸属性限制元素的尺寸时，如果内容所需的空间大于元素的尺寸的话，则产生溢出的效果
			2、溢出处理属性
				属性：overflow
				取值：
					1、visible
						默认值，可见的
					2、hidden
						溢出隐藏
					3、scroll
						显示滚动条，溢出时可用
					4、auto
						自动，溢出的方向产生滚动条并可用
	3、边框属性
		1、基本的边框实现
			1、边框的简写方式
				通过一个属性设置四个方向边框的所有效果(宽度，样式，颜色)
				属性：border
				取值：width style color
					width:边框的宽度，以px为单位的数值
					style:边框的样式
						solid:实线
						dotted:虚线(点)
						dashed:虚线(线)
					color:边框的颜色
						取值为颜色的合法值
						可以取值为 transparent(透明)
				特殊：
					border:none; 可以取消所有的边框
				注意：
					边框会影响元素的尺寸的
			2、单边定义
				设置某一条边框的宽度，样式，颜色
				属性：border-方向:width style color;
				方向：top / bottom / left / right
				ex:
					上边框样式3px，实线，红色
					border-top:3px solid red;
			3、单属性定义
				设置四个方向边框的某一个属性值
				语法：border-属性:值;
				 属性：width / style / color
				ex:
					1、设置四个方向的边框尺寸为5px
						border-width:5px;
					2、设置四个方向的边框颜色为蓝色
						border-color:blue;
			4、单边单属性定义
				设置某一个方向的边框的某一个属性值
				属性：border-方向-属性:值;
				ex:
					1、上边框的颜色为红色
						border-top-color:red;
					2、左边框的样式为虚线
						border-left-style:dashed;
					3、下边框的宽度为5px
						border-bottom-width:5px;
		2、轮廓
			outline:none;












<div id="laowang">
	<div id="wangbaoqiang">
		<div id="wangmoumou"></div>
		<div id="wangxx"></div>
	</div>
	<div id="wanglaowu"></div>
</div>


<div id="main">
	<p></p>
</div>
#main p{}
#main>p{}
