1、浮动
	1、清除浮动
		元素一旦浮动起来之后，其后面的元素要上前占位，有可能被浮动元素压在底下。如果后面元素不想上前占位的话，则可以通过清除浮动影响的方式来解决问题

		1、语法
			属性：clear
			取值：
				1、none
					默认值，不做任何清除浮动操作的
				2、left
					清除当前元素前面元素左浮动带来的影响，即不会被前面元素左浮动压在底下
				3、right
					清除当前元素前面元素右浮动带来的影响，即不会被前面元素右浮动压在底下
				4、both
					清除情面元素任何一种浮动方式所带来的影响
	2、浮动元素对父元素高度的影响
		由于浮动元素会脱离文档流，所以不占据页面空间的，那么也就不占父元素的空间。所以父元素的高度是以未浮动的子元素为准的。
		解决方案：
			1、为父元素设置高度
				弊端：不一定每次都清楚高度是多少
			2、让父元素也浮动
				弊端：会对父元素后面的元素产生位置影响
			3、设置父元素的overflow为hidden或auto
				弊端：有溢出要显示的元素也一同隐藏了
			4、在父元素中追加空块级子元素，并设置其clear属性为both
2、其他定位
	1、相关属性
		1、定位方式
			属性：position
			作用：改变元素的定位方式
			取值：
				1、static - 静态的，默认值
				2、relative - 相对定位
				3、absolute - 绝对定位
				4、fixed - 固定定位
			注意：将元素的position设置为 relative/absolute/fixed任意一种的话，那么该元素就称为 “已定位元素”
		2、偏移属性(共4个)
			作用：配合着已定位元素实现位置的移动
			属性：top / right / bottom / left
			取值：以 px 为单位的数字
				top:以元素的上边为基准边移动元素
				right:以元素的右边为基准边移动元素
				bottom: ...
				left: ...
	2、定位方式 - 相对定位
		1、什么是相对定位
			元素会相对于它原来的位置偏移某个距离
		2、语法
			属性：position
			取值：relative
			配合着 偏移属性 实现元素位置的移动
		练习：
			创建一个 ul ，四个 li
			每个li 左浮动 ，设置尺寸为 100*30，10px右外边距
			1、使用相对定位的方式完成
				鼠标悬停在li上时，li向左上角偏移10px
			2、使用margin的方式完成上述操作
	3、定位方式 - 绝对定位(难点)
		1、什么是绝对定位 & 特点
			1、绝对定位的元素会脱离文档流-不占据页面空间
			2、绝对定位的元素会相对于离它最近的，已定位的，祖先元素去实现位置的初始化
			3、如果元素没有最近的，已定位的祖先元素的话，那么则相对于body去实现位置的初始化
		2、语法
			属性：position
			取值：absolute
			配合着 偏移属性 实现位置的定位
		3、注意
			绝对定位的元素会变成块级元素
			(一个行内元素做成绝对定位的话，可以直接修改尺寸)
	4、堆叠顺序
		1、什么是堆叠顺序
			指定堆叠在一起的元素们的排列顺序
		2、语法
			属性：z-index
			取值：无单位的数字，数字越大越靠前，默认值0
		3、注意
			1、如果堆叠顺序相同的话，则后来者居上
			2、只有已定位元素才能使用z-index
				relative/absolute/fixed
			3、父子元素间，永远都是子压在父上，不受堆叠顺序影响的
	5、定位方式 - 固定定位
		1、语法
			属性：position
			取值：fixed
			配合着 偏移属性 实现元素位置的固定
		2、注意
			1、固定定位的元素会变成块级
			2、固定定位的元素永远都是相对于body去实现位置的初始化的


			


<div>
	<p>
		<span>
			<b></b>
		</span>
	</p>
</div>








