1、JS的使用方式
	1、在元素事件中编写JS代码
		事件：用户在元素上所激发的一些行为操作
			onclick:当用户点击元素时要做的操作
		语法：
			<ANY onclick="JS执行代码">
			JS执行代码：
				console.log("向控制台中输出一句话") ;
				console.log('向控制台中输出一句话');
	2、将代码嵌入在网页中的<script></script>里
		语法：
			在网页的任意位置处，均可嵌入<script></script>
			<script>
				JS可执行代码
			</script>
		特点：
			网页加载时即执行

			document.write("向网页中输出的一句话");
			注意：如果将document.write()放在按钮中的话，在执行时，则会刷新网页中的内容

		练习：
			在一个按钮中，单击时，执行 document.write()
	3、将JS执行代码编写在JS文件中
		1、创建一个js文件(xxx.js)，并编写JS代码
		2、在使用的网页上，对js文件进行引入
			<script src="JS文件路径"></script>
			注意：
				在引入的JS的标记中，不能编写js代码
				<script src="xxx.js">
					console.log();
				</script>
				以上写法是错误的!
		练习：
			1、使用元素事件方式，向控制台中输出一句话"我的第一个JS练习"
			2、使用<script></script>，向网页中输出一句话"我的第一个JS练习"
			3、使用外部JS文件的方式，在网页中弹出一句话 "我的第一个JS练习"
2、JS的基础语法
	1、JS都是由语句来组成的
		1、由运算符，关键字 或 表达式组成
		2、JS中严格区分大小写
			console.log('');
			Console.log(""); //错误,C不能大写
		3、每条语句必须以 ; 表示结束
	2、注释
		单行：//
		多行：/* */
3、JS中的变量 和 常量
	1、变量
		1、声明变量
			声明：var 变量名;
			赋值：变量名 = 值;
			声明并赋值：var 变量名=值;
			var uname = "王小明";
			console.log(uname);
		2、注意
			1、在声明变量时，尽量使用 var 关键字，如果省略，也可以，但容易出问题
			2、声明变量如果未赋值的话，默认值为 undefined
		3、变量名的命名规范
			1、不能是JS中的关键字或保留关键字
			2、由字母，数字，下划线(_)和$组成
				var $ = 35;
				var _=46;
			3、不能以数字开头
				var 1=1; //错误
			4、尽量不要重复
			5、尽量要见名知意
				var a;
				var b;
				var c;

				var age;
				var uname;
				var gender;
			6、如无特殊需求的话，尽量使用小驼峰命名法
				var age;
				var userName;

				var name = ""; //不能用name作为变量名
		4、变量的使用
			1、为变量赋值
				只要变量出现在赋值符号(=)的左边，一律是赋值操作
				var age = 35;
				var newAge = age;

			2、获取变量的值
				只要变量没出现在赋值符号的左边，一律都是取值
				var age = 35; //赋值
				console.log(age);//取值
				var newAge = age;//newAge：赋值，age：取值
				age = age + 35;
	2、常量
		1、什么是常量
			一经声明就不允许被修改的数据就是常量
		2、语法
			const 常量名=值;
			注意：
				1、常量声明好之后是不允许修改的，所以一定要赋初始值
				2、常量名一般采用全大写形式
		练习：
			1、创建一个网页 04-const-exer.html
			2、声明一个常量PI，赋值为3.14
			3、声明一个变量r,表示一个圆的半径,随意赋值
			4、通过PI和r计算该圆的周长，并将结果保存在变量l中，并打印输出
			5、通过PI和r计算该圆的面积，并将结果保存在变量s中，并打印输出
			输出格式（控制台）
				半径为...的圆的周长是...
				半径为...的圆的面积是...
			保留到n位小数：
				var l = 3.1415926;
				l = l.toFixed(n);
4、数据类型
	JS中的数据类型分为以下两大类：
	1、基本数据类型
		1、number类型
			数字类型，可以表示32位(4字节)的整数以及64位(8字节)的浮点数
			整数：
				表示十进制，八进制，十六进制
				十进制：var num = 10;
				八进制：var num = 010;
				十六进制：var num = 0x10;
			小数：
				小数点计数法：var num = 123.456;
				指数计数法：var num = 1.8e2;
		2、string类型
			字符串类型
			由Unicode字符，数字，标点组成
			注意：字符串在使用时必须用""或''引起来
			1、查看字符的Unicode码
				var str = "张";
				var uCode=str.charCodeAt().toString(16);
			2、如何将Unicode码转换成对应的字符？？
				已知Unicode码：5f20
				var str = "\u5f20";
				console.log(str);
			3、中文范围
				"\u4e00" ~ "\u9fa5"
			4、转义字符
				\n : 换行
				\t : 一个制表符
				\" : "
				\' : '
				\\ : \
		3、boolean类型
			布尔类型，只用于表示真(true)或假(false)
			通常会表示条件的结果
			注意：
				boolean类型可以参与到数字运算的，true当成1去运算，false当成0去运算
				var r = 1 + true; //结果为 2
				var r = 3784 * false; // 结果为 0
				var r = true + false; // 结果为 1
		4、查看数据类型
			使用 typeof() 或 typeof 查看变量的数据类型
	2、引用数据类型
5、数据类型转换
	1、隐式转换
		大部分加法运算时，如果数据类型不一致的话可以进行隐式转换
		1、数字 + 字符串 ：将数字转换为字符串
			var num = 15; //number
			var str = "18"; //string
			var r = num + str; // 1518

			var r = "15"+18+15;//151815
			var r = "15"+(18+15);// 1533
			var r = 15+18+"15";//3315
		2、数字 + 布尔 ：将布尔类型转换为number
			var r = 35 + true ;  //36
		3、字符串 + 布尔 ：将布尔转换为字符串
			var result = "你好" + true;
			结果为：你好true
		4、布尔 + 布尔 ：将布尔转换成数字
			var r = true + true;
			结果：2
		注意：
			任何数据类型与字符串做"+"运算时，都是先转换成字符串再做拼接
	2、强制转换(显示转换/转换函数)
		1、toString()
			将任意类型的数据转换成字符串，并返回转换后的结果
			var num = 15;
			var r = num.toString();

			var num = 15;
			var r = num + "";
		2、parseInt()
			作用：将任意类型的数据尽量转换成整数，如果实在无法转换的话，则返回 NaN(Not a Number)
			ex:
				1、
					var r = parseInt("13");
					r : 13
				2、
					var r = parseInt("13.5");
					r : 13
				3、
					var r = parseInt("13你好");
					r : 13
				4、
					var r = parseInt("你好13");
					r : NaN
		3、parseFloat()
			作用：尽量将任意类型的数据转换为小数
			1、
				var num = parseFloat("35.07");
				num : 35.07
			2、
				var num = parseFloat("35.7你好");
				num : 35.7
			3、
				var num = parseFloat("你好35.7");
				num : NaN
		4、Number()
			作用：将指定的数据转换成数字，只要包含非法字符的话，结果就为NaN
			1、
				var r = Number("35.5");
				r : 35.5
			2、
				var r = Number("35你好");
				r : NaN
			3、
				var r = Number("你好35);
				r : NaN

		练习：
			1、创建网页08-dataType-exer.html
			2、弹出一个输入提示框
				var input = window.prompt("提示文字：");
				input变量中，保存的就是用户输入的数据
			3、要求从输入提示框中输入一个数字
			4、将输入的数据 + 10，打印计算后的结果
			5、使用typeof函数查看输入数据的数据类型
			6、将输入的数据转换为数字，再 + 10查看结果

			注意：
				只要从网页中获取到的数据，永远都是string类型的





