1、循环
	1、循环的流程控制
		1、break
			在循环体内使用，用于跳出整个循环结构
		2、continue
			在循环体内使用，用于跳出本次循环，继续执行下次循环
	2、for 循环
		1、while
			var i = 1;//循环条件的初始化(声明)
			while(i <= 100){//循环条件判断
				console.log(i);//循环操作
				i++;//更新循环条件
			}
		2、for语法
			for(表达式1; 表达式2;表达式3){
				循环操作
			}
			表达式1：循环条件的初始化(声明)
			表达式2：循环条件判断
			表达式3：更新循环条件

			流程：
				1、先执行表达式1，声明循环条件(执行一次)
				2、再判断表达式2的值，true 或 false
				3、如果为true，则执行循环操作
				   如果为false，则退出循环
				4、执行完循环操作后，再执行表达式3
				5、再判断表达式2的值，同步骤2
		3、for VS while
			1、相同
				都是先判断循环条件，再执行循环操作的结构
			2、不同
				while:优先用在不确定循环次数的场合下
				for:优先用在确定循环次数的场合下
		练习：
			1、判断素数
				1、从弹框中随意录入一个数字，判断其是否为素数
				 素数：只能被1 和 它自己整除的数字
				2、ex
					输入 3
					输出 3是素数

					输入 6
					输出 6不是素数
			2、打印九九乘法表中的一行数据(控制台)
				1、从弹框中随意输入数字(1-9),输入几，就打印第几行

					1*3=3  2*3=6  3*3=9
	3、循环的嵌套
		允许在一个循环中，再出现另外一个循环
		for(var i=1;i<=10;i++){  //外层循环
			for(var j=1;j<=10;j++){  //内层循环
				
			}
		}
		外层循环走一次，内层循环走一轮
		练习：
			在控制台上打印完整的九九乘法表
2、函数
	1、什么是函数
		函数，又称为"function",是一段预定义好的，独立执行并且包含多条语句的代码块
		优点：
			1、多条执行语句的封装
			2、实现了代码的复用
	2、在JS中创建函数
		function 函数名(参数列表){
			函数体
			[返回值]
		}
		
		参数列表：
			如果没有参数，可以为空
			如果有参数，编写参数列表。如果有多个参数的话，各个参数之间使用","隔开
			有参数的函数在调用时，就要传参，如果未传参的话，那么参数的值就是undefined
		返回值：
			在函数体内，经过运算后，需要传递给函数调用者的一个值，就是返回值。
			返回值是可选的，有返回值的话，使用return 进行返回，最多只能有一个返回值 
	3、函数的调用
		在任意的JS合法位置处，都允许做函数的调用
			var ret = 函数名(参数列表);
			有参数，则传递参数，否则为空
			有返回值，可以接收返回值，否则不接收
		

		练习：
			1、声明一个函数 isRun
			2、该函数要接收一个参数，表示年份
			3、在函数体内计算参数是否为闰年，并进行返回
			4、调用函数，传参，接收返回值，并打印结果
	4、匿名函数
		1、什么是匿名函数
			匿名函数是一个没有名称的函数，会针对某一功能而存在。不能独立声明。
		2、语法
			function(参数列表){
				函数体
			}

			ex:
				window.onload = function(){
					 ... ...
				}
	5、变量的作用域
		1、什么是变量的作用域
			变量的作用域指的是变量的可访问范围
		2、作用域的分类
			1、局部变量
				使用var关键字声明在某个函数内的变量，都是局部变量

				局部变量只能在声明的函数内使用，出了函数则无法使用
			2、全局变量
				1、在function之外声明的变量都是全局变量
				2、声明变量不使用var关键字的时候，都是全局变量

				全局变量可以应用在各个函数中
			
			注意：全局变量，推荐在所有function之外去声明。
3、数组 - Array
	1、什么是数组
		数组(Array)是一个用于保存批量数据的数据结构
		数组也是按照线性结构来保存数据的
	2、创建数组
		1、创建一个空数组
			var 数组名 = [];
		2、创建数组并初始化数据
			var 数组名 = [元素1,元素2,... ...];
		3、创建一个空数组
			var 数组名 = new Array();
		4、创建数组并初始化数据
			var 数组名 = new Array(元素1,元素2,...);
	3、数组的使用
		获取 或 设置数组元素的值，一律使用下标
		下标从0开始，到数组元素个数-1为止
		var names = ['张三丰','张学友','张飞'];
		1、将 names 数组中的第一个元素更改为 "张无忌"
			names[0] = "张无忌";
		2、打印输出数组中的第三个元素
			console.log(names[2]);
	4、获取数组的长度
		属性：length
		用法：数组名.length
		使用场合：
			1、能够找到数组中，最新要插入的元素的位置(即向数组尾部增加元素时使用)
				var arr = ["张学友","刘德华","黎明"];
				arr[arr.length] = "黎明";
				练习：
					1、让用户循环的从弹框中录入数据，并将录入的数据保存在一个数组中，直到输入exit为止(exit不存)。最后打印数组中所有的数据
			2、配合循环，遍历数组中的元素
				var arr = ["张学友","刘德华","黎明"];
				for(var i=0;i<arr.length;i++){
					console.log(arr[i]);
				}

				练习：
					1、声明一个数组，存放若干数字
					2、从弹框中录入一个数字
					3、判断录入的数字在数组中的下标是多少
						如果存在：则显示下标值
						如果不存在：提示 输入的数据不存在


		作业：
			使用函数完成日期计算器
			1、分三次从弹框中录入年，月，日
			2、判断该日是星期几
			前提：1900年1月1日是星期1